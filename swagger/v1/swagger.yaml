---
openapi: 3.0.1
info:
  title: API V1 Documentation for Auth
  version: v1
paths:
  "/api/v1/register":
    post:
      summary: Register a new user
      tags:
      - Auth
      responses:
        '201':
          description: User created successfully
        '422':
          description: Invalid parameters
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: user@example.com
                password:
                  type: string
                  example: password123
              required:
              - email
              - password
  "/api/v1/login":
    post:
      summary: Login a user
      tags:
      - Auth
      responses:
        '200':
          description: User logged in successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9"
        '401':
          description: Invalid credentials
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: user@example.com
                password:
                  type: string
                  example: password123
              required:
              - email
              - password
  "/api/v1/verify_token":
    get:
      summary: Verify user token
      tags:
      - Auth
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
            example: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9
          description: Bearer token for authentication
      responses:
        '200':
          description: Token is valid
          content:
            application/json:
              schema:
                type: object
                properties:
                  user_id:
                    type: integer
                    example: 1
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Invalid or expired token
servers:
- url: http://{defaultHost}
  variables:
    defaultHost:
      default: localhost:3100